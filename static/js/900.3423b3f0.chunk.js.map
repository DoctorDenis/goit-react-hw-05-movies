{"version":3,"file":"static/js/900.3423b3f0.chunk.js","mappings":"4RAcaA,GAXWC,EAAAA,GAAAA,GAAH,0LAWKA,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uD,mBCVhB,SAASE,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KACN,SAAAC,GAAK,OAED,yBACE,SAACR,EAAD,CAAYS,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,UACE,SAACQ,EAAA,EAAD,CAAWL,MAAOA,OAFbA,EAAME,S,cCJZ,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,sBAAsBC,KAAhC,mCAAqC,WAAMC,GAAN,mFACbC,EAAAA,EADa,SACgBD,EAASE,KAAKC,QAD9B,mBAC7BC,GAD6B,cAEnCR,EAAUQ,GAFyB,2CAArC,yDAIC,KAEI,SAACrB,EAAD,CAAYC,OAAQA,M,8ECfhBqB,E,QAAOxB,GAAAA,IAAH,uQ,SCEV,SAASY,EAAT,GAA+B,IAAVL,EAAS,EAATA,MAClBkB,EAA6BlB,EAA7BkB,IAAKC,EAAwBnB,EAAxBmB,MAAOC,EAAiBpB,EAAjBoB,aACpB,OACE,UAACH,EAAD,YACE,gBACEI,IAAKH,EAAG,yCAAqCA,GAAQI,EACrDC,IAAG,oBAAeJ,EAAf,aAEL,0BACGA,EADH,YACYC,QADZ,IACYA,OADZ,EACYA,EAAcI,MAAM,KAAK,GADrC,Y,qBCZS,SAASX,EAAuBjB,GAC7C,OAAOA,EAAOG,KAAI,gBAAgBmB,EAAhB,EAAGO,YAAkBN,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,aAA5B,MAAoD,CACpElB,GADgB,EAA0CA,GAE1DgB,IAAAA,EACAC,MAAAA,EACAC,aAAAA,M","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Home/Home.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","helpers/fetchEntriesFromMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 0 auto;\n  padding: 0;\n  & li:nth-child(2n) {\n    background-color: #b7b4b4;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  background-color: skyblue;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MoviesList.styled';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\nexport function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(\n        movie =>\n          (movie = (\n            <li key={movie.id}>\n              <StyledLink to={`movies/${movie.id}`} state={{ from: location }}>\n                <MovieCard movie={movie} />\n              </StyledLink>\n            </li>\n          ))\n      )}\n    </ul>\n  );\n}\n","import { fetchInfo } from 'helpers/fetchAPI';\nimport { useState, useEffect } from 'react';\n// import { StyledUl } from './Home.styled';\n// import { MovieCard } from '../MovieCard/MovieCard';\nimport { MoviesList } from '../MoviesList/MoviesList';\n// import { StyledLink } from './Home.styled';\nimport fetchEntriesFromMovies from 'helpers/fetchEntriesFromMovies';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchInfo('trending/movie/day').then(async response => {\n      const filteredArray = fetchEntriesFromMovies(await response.data.results);\n      setMovies(filteredArray);\n    });\n  }, []);\n\n  return <MoviesList movies={movies} />;\n}\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  margin: 1rem;\n  text-decoration: none;\n  word-wrap: break-word;\n  width: fit-content;\n\n  display: flex;\n  align-items: center;\n\n  & img {\n    display: inline;\n    width: 100px;\n    height: auto;\n    margin-right: 2rem;\n  }\n`;\n","import noImage from '../../images/no_img.jpg';\nimport { Card } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport function MovieCard({ movie }) {\n  const { img, title, release_date } = movie;\n  return (\n    <Card>\n      <img\n        src={img ? `https://image.tmdb.org/t/p/w500${img}` : noImage}\n        alt={`Poster of ${title} movie`}\n      ></img>\n      <h3>\n        {title} ({release_date?.split('-')[0]})\n      </h3>\n    </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    img: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }),\n};\n","export default function fetchEntriesFromMovies(movies) {\n  return movies.map(({ poster_path: img, title, release_date, id }) => ({\n    id,\n    img,\n    title,\n    release_date,\n  }));\n}\n"],"names":["StyledLink","styled","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","MovieCard","Home","useState","setMovies","useEffect","fetchInfo","then","response","fetchEntriesFromMovies","data","results","filteredArray","Card","img","title","release_date","src","noImage","alt","split","poster_path"],"sourceRoot":""}