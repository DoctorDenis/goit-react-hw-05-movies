{"version":3,"file":"static/js/186.87af72ef.chunk.js","mappings":"oQAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,UAAD,OAAWH,EAAX,aAA8BI,KAAvC,mCAA4C,WAAMC,GAAN,6EAC1CN,EAD0C,SACzBM,EAASC,KAAKC,QADW,uGAA5C,yDAGC,CAACP,KAGF,wBACGF,EAAQU,OAAS,EAChBV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,QAA3B,OACV,2BACE,qCAAaF,MACb,uCAAe,IAAIG,KAAKF,GAAYG,kBACpC,uBAAIF,MAHGH,OAOX","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchInfo } from '../../helpers/fetchAPI';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchInfo(`/movie/${movieId}/reviews`).then(async response =>\n      setReviews(await response.data.results)\n    );\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, created_at, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>Published: {new Date(created_at).toUTCString()}</p>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <h3>Sorry! We have no reviews for this movie yet.</h3>\n      )}\n    </ul>\n  );\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchInfo","then","response","data","results","length","map","id","author","created_at","content","Date","toUTCString"],"sourceRoot":""}