{"version":3,"file":"static/js/301.8a1ad870.chunk.js","mappings":"sQAAe,SAASA,EAAuBC,GAC7C,OAAOA,EAAOC,KAAI,gBAAgBC,EAAhB,EAAGC,YAAkBC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,aAA5B,MAAoD,CACpEC,GADgB,EAA0CA,GAE1DJ,IAAAA,EACAE,MAAAA,EACAC,aAAAA,M,aCEW,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,sBAAsBC,KAAhC,mCAAqC,WAAMC,GAAN,mFACbd,EADa,SACgBc,EAASC,KAAKC,QAD9B,mBAC7BC,GAD6B,cAEnCP,EAAUO,GAFyB,2CAArC,yDAIC,KAGD,SAAC,IAAD,UACGhB,EAAOC,KACN,SAAAgB,GAAK,OAED,yBACE,SAAC,IAAD,CAAYC,GAAE,iBAAYD,EAAMX,IAAhC,UACE,SAACa,EAAA,EAAD,CAAWF,MAAOA,OAFbA,EAAMX,W,gHClBdc,EAAWC,EAAAA,GAAAA,GAAH,yLAWRC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uD,8ECZVG,E,QAAOH,GAAAA,IAAH,uQ,SCEV,SAASF,EAAT,GAA+B,IAAVF,EAAS,EAATA,MAClBf,EAA6Be,EAA7Bf,IAAKE,EAAwBa,EAAxBb,MAAOC,EAAiBY,EAAjBZ,aACpB,OACE,UAACmB,EAAD,YACE,gBACEC,IAAKvB,EAAG,yCAAqCA,GAAQwB,EACrDC,IAAG,oBAAevB,EAAf,aAEL,0BACGA,EADH,YACYC,QADZ,IACYA,OADZ,EACYA,EAAcuB,MAAM,KAAK,GADrC","sources":["helpers/fetchEntriesFromMovies.js","components/Home/Home.jsx","components/Home/Home.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx"],"sourcesContent":["export default function fetchEntriesFromMovies(movies) {\n  return movies.map(({ poster_path: img, title, release_date, id }) => ({\n    id,\n    img,\n    title,\n    release_date,\n  }));\n}\n","import { fetchInfo } from 'helpers/fetchAPI';\nimport { useState, useEffect } from 'react';\nimport { StyledUl } from './Home.styled';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport { StyledLink } from './Home.styled';\nimport fetchEntriesFromMovies from 'helpers/fetchEntriesFromMovies';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchInfo('trending/movie/day').then(async response => {\n      const filteredArray = fetchEntriesFromMovies(await response.data.results);\n      setMovies(filteredArray);\n    });\n  }, []);\n\n  return (\n    <StyledUl>\n      {movies.map(\n        movie =>\n          (movie = (\n            <li key={movie.id}>\n              <StyledLink to={`movies/${movie.id}`}>\n                <MovieCard movie={movie} />\n              </StyledLink>\n            </li>\n          ))\n      )}\n    </StyledUl>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 0 auto;\n  padding: 0;\n  & li:nth-child(2n) {\n    background-color: #b7b4b4;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  background-color: skyblue;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  margin: 1rem;\n  text-decoration: none;\n  word-wrap: break-word;\n  width: fit-content;\n\n  display: flex;\n  align-items: center;\n\n  & img {\n    display: inline;\n    width: 100px;\n    height: auto;\n    margin-right: 2rem;\n  }\n`;\n","import noImage from '../../images/no_img.jpg';\nimport { Card } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport function MovieCard({ movie }) {\n  const { img, title, release_date } = movie;\n  return (\n    <Card>\n      <img\n        src={img ? `https://image.tmdb.org/t/p/w500${img}` : noImage}\n        alt={`Poster of ${title} movie`}\n      ></img>\n      <h3>\n        {title} ({release_date?.split('-')[0]})\n      </h3>\n    </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    img: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }),\n};\n"],"names":["fetchEntriesFromMovies","movies","map","img","poster_path","title","release_date","id","Home","useState","setMovies","useEffect","fetchInfo","then","response","data","results","filteredArray","movie","to","MovieCard","StyledUl","styled","StyledLink","Link","Card","src","noImage","alt","split"],"sourceRoot":""}